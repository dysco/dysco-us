import os

dysco = int($DYSCO!'0')
secure = int($SECURE!'0')

assert(0 <= dysco <= 1)
assert(0 <= secure <= 1)

os.system('sudo ifconfig enp134s0f0 down 1>/dev/null 2>/dev/null')
os.system('sudo ifconfig enp134s0f1 down 1>/dev/null 2>/dev/null')
os.system('sudo mkdir -p /tmp/bessd 1>/dev/null 2>/dev/null')
os.system('sudo rm -f /tmp/bessd/vhost_*.sock 1>/dev/null 2>/dev/null')
os.system("sudo ps -axf | grep qemu | awk -F ' ' '{print $1}' | xargs kill -9 2>/dev/null")

bess.add_worker(wid=1,core=10)
#bess.add_worker(wid=2,core=11)
#bess.add_worker(wid=3,core=12)
#bess.add_worker(wid=4,core=13)
#bess.add_worker(wid=5,core=14)
#bess.add_worker(wid=6,core=15)
#bess.add_worker(wid=7,core=16)
#bess.add_worker(wid=8,core=17)
#bess.add_worker(wid=9,core=18)
#bess.add_worker(wid=10,core=19)

vdev_str0 = 'eth_vhost0,iface=/tmp/bessd/vhost_client0.sock,queues=1'
vdev_str1 = 'eth_vhost1,iface=/tmp/bessd/vhost_client1.sock,queues=1'
vdev_str2 = 'eth_vhost2,iface=/tmp/bessd/vhost_client2.sock,queues=1'
vdev_str3 = 'eth_vhost3,iface=/tmp/bessd/vhost_client3.sock,queues=1'

PMDPort(name='port_mlx0', port_id=0, num_inc_q=1, num_out_q=1)
PMDPort(name='port_client0', vdev=vdev_str0, num_inc_q=1, num_out_q=1)
PMDPort(name='port_client1', vdev=vdev_str1, num_inc_q=1, num_out_q=1)
PMDPort(name='port_client2', vdev=vdev_str2, num_inc_q=1, num_out_q=1)
PMDPort(name='port_client3', vdev=vdev_str3, num_inc_q=1, num_out_q=1)

ipfwd::IPLookup()
ipfwd.add(prefix='192.168.1.1', prefix_len=32, gate=0)
ipfwd.add(prefix='192.168.1.2', prefix_len=32, gate=1)
ipfwd.add(prefix='192.168.1.3', prefix_len=32, gate=2)
ipfwd.add(prefix='192.168.1.4', prefix_len=32, gate=3)
ipfwd.add(prefix='0.0.0.0', prefix_len=0, gate=4)

pi0=PortInc(name='port_inc0', port='port_mlx0', prefetch=True)
pi1=PortInc(name='port_inc1', port='port_client0', prefetch=True)
pi2=PortInc(name='port_inc2', port='port_client1', prefetch=True)
pi3=PortInc(name='port_inc3', port='port_client2', prefetch=True)
pi4=PortInc(name='port_inc4', port='port_client3', prefetch=True)
po0=PortOut(name='port_out0', port='port_mlx0')
po1=PortOut(name='port_out1', port='port_client0')
po2=PortOut(name='port_out2', port='port_client1')
po3=PortOut(name='port_out3', port='port_client2')
po4=PortOut(name='port_out4', port='port_client3')

#bess.attach_task(module_name=pi0.name, wid=1)
#bess.attach_task(module_name=pi1.name, wid=2)
#bess.attach_task(module_name=pi2.name, wid=3)
#bess.attach_task(module_name=pi3.name, wid=4)
#bess.attach_task(module_name=pi4.name, wid=5)

if dysco == 1:
	dyscocenter::DyscoCenter()
	dyscocenter.add(priority=1, sc_len=1, ns='client0', chain=['192.168.2.1'], filter='dst port 5001')
	dyscocenter.add(priority=2, sc_len=1, ns='client1', chain=['192.168.2.1'], filter='dst port 5002')
	dyscocenter.add(priority=3, sc_len=1, ns='client2', chain=['192.168.2.1'], filter='dst port 5003')
	dyscocenter.add(priority=4, sc_len=1, ns='client3', chain=['192.168.2.1'], filter='dst port 5004')

	dout0=DyscoAgentOut(name='dout0', ns='client0')
	dout1=DyscoAgentOut(name='dout1', ns='client1')
	dout2=DyscoAgentOut(name='dout2', ns='client2')
	dout3=DyscoAgentOut(name='dout3', ns='client3')
	din0=DyscoAgentIn(name='din0', wid=2, ns='client0')	
	din1=DyscoAgentIn(name='din1', wid=3, ns='client1')	
	din2=DyscoAgentIn(name='din2', wid=4, ns='client2')	
	din3=DyscoAgentIn(name='din3', wid=5, ns='client3')
	if secure == 0:
	   	dout0.setup(agentin='din0', devip='192.168.1.1', secure=False, wid=2)
		dout1.setup(agentin='din1', devip='192.168.1.2', secure=False, wid=3)
		dout2.setup(agentin='din2', devip='192.168.1.3', secure=False, wid=4)
		dout3.setup(agentin='din3', devip='192.168.1.4', secure=False, wid=5)
	else:
	   	dout0.setup(agentin='din0', devip='192.168.1.1', secure=True, wid=2)
		dout1.setup(agentin='din1', devip='192.168.1.2', secure=True, wid=3)
		dout2.setup(agentin='din2', devip='192.168.1.3', secure=True, wid=4)
		dout3.setup(agentin='din3', devip='192.168.1.4', secure=True, wid=5)

	#bess.attach_task(module_name=dout0.name, wid=2)
	#bess.attach_task(module_name=dout1.name, wid=3)
	#bess.attach_task(module_name=dout2.name, wid=4)
	#bess.attach_task(module_name=dout3.name, wid=5)

	#bess.attach_task(module_name=q0.name, wid=6)
	#bess.attach_task(module_name=q1.name, wid=7)
	#bess.attach_task(module_name=q2.name, wid=8)
	#bess.attach_task(module_name=q3.name, wid=9)
	#bess.attach_task(module_name=q4.name, wid=10)

	dout0:1 -> ipfwd
	dout1:1 -> ipfwd
	dout2:1 -> ipfwd
	dout3:1 -> ipfwd
	
	pi0 -> ipfwd
	pi1 -> dout0 -> ipfwd
	pi2 -> dout1 -> ipfwd
	pi3 -> dout2 -> ipfwd
	pi4 -> dout3 -> ipfwd
	
	ipfwd:0 -> din0 -> po1
	ipfwd:1 -> din1 -> po2
	ipfwd:2 -> din2 -> po3
	ipfwd:3 -> din3 -> po4
	ipfwd:4 -> po0
	
else:
	pi0 -> ipfwd
	pi1 -> ipfwd
	pi2 -> ipfwd
	pi3 -> ipfwd
	pi4 -> ipfwd
	ipfwd:0 -> po1
	ipfwd:1 -> po2
	ipfwd:2 -> po3
	ipfwd:3 -> po4

os.system('sleep 2')
os.system('sudo bash /u/ronaldof/qemu-client0/script-1.sh')
os.system('sudo bash /u/ronaldof/qemu-client1/script-1.sh')
os.system('sudo bash /u/ronaldof/qemu-client2/script-1.sh')
os.system('sudo bash /u/ronaldof/qemu-client3/script-1.sh')
os.system('sleep 2')